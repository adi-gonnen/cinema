{"version":3,"sources":["cmps/header/Header.js","services/MovieService.js","cmps/moviePreview/MoviePreview.js","cmps/home/Home.js","cmps/movieEdit/MovieEdit.js","cmps/movieDetails/MovieDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","Component","API_KEY","MOVIES","getMovieById","id","axios","get","concat","then","res","data","MovieService","getMovies","saveMovie","newMovie","movie","duplicate","some","Title","imdbID","swal","idx","findIndex","m","_updateMovie","Promise","resolve","reject","uniqid","Poster","push","loadMovies","prms","Search","forEach","all","sort","b","timeA","Runtime","toLowerCase","timeB","deleteMovie","console","log","splice","checkDuplicate","searchMovieById","currMovie","convertMonth","int","months","i","length","MoviePreview","state","_this","props","back","edit","editMovie","setState","this","Redirect","to","pathname","imgSrc","Link","substring","alt","Director","Year","Genre","split","map","type","key","onClick","index_es","icon","title","Home","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addMovie","add","refreshMovies","movies","img","_this2","updateMovie","cmps_moviePreview_MoviePreview","MovieDetails","cancel","handleTitle","event","JSON","parse","stringify","target","value","handleDirector","handleYear","handleReleased","dateReleased","Date","newDate","fullDate","month","getMonth","getDate","getFullYear","Released","movieDate","handleRuntime","handleGenre","delete","buttons","dangerMode","willDelete","movieId","timer","button","close","match","params","bind","assertThisInitialized","keyCount","charCodeAt","preventDefault","setTime","onChange","MovieId","Actors","imdbRating","Language","Plot","library","faEdit","faTrashAlt","faUndo","faSave","faVideo","App","HashRouter","Fragment","Header_Header","Switch","Route","exact","path","component","MovieEdit","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0464315.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header flex\">\r\n                <img src=\"img/movie3.png\" className=\"header-img\"/>\r\n                <h1 className=\"header-title\">Herolo Cinema</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport axios from 'axios';\r\nimport uniqid from 'uniqid'\r\nimport swal from \"sweetalert\";\r\nconst API_KEY = 'cf5f5d9f';\r\nvar MOVIES = null;\r\n\r\n\r\nfunction loadMovies() {\r\n    // console.log(MOVIES);\r\n    if (MOVIES === null) {\r\n        return axios.get(`https://www.omdbapi.com/?s=job&type=movie&page=3&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log(res.data.Search);            \r\n            MOVIES = [];\r\n            var prms = []\r\n            res.data.Search.forEach(movie => {\r\n                prms.push(getMovieById(movie.imdbID)\r\n                .then (data  => {\r\n                    // var date = new Date();\r\n                    // date.setTime(Date.parse(data.Released));\r\n                    // data.Released = data;\r\n                    // console.log('movie from service: ', movie);                \r\n                    MOVIES.push(data)\r\n                    // console.log('movies:', MOVIES);\r\n                }))\r\n            })\r\n            return Promise.all(prms);\r\n            // MOVIES = res.data.Search;\r\n        }).then ( () => {\r\n\r\n            MOVIES.sort( (a,b) => {\r\n                var timeA = a.Runtime.toLowerCase();\r\n                var timeB = b.Runtime.toLowerCase();\r\n                if (timeA < timeB) return -1;\r\n                if (timeA > timeB) return 1;\r\n                return 0;            \r\n            })\r\n            // console.log('service:', MOVIES);\r\n            return MOVIES\r\n        })\r\n    } else return Promise.resolve(MOVIES);\r\n}\r\n\r\nfunction getMovies() {\r\n    if (MOVIES !== null) return MOVIES\r\n}\r\n\r\nfunction getMovieById(id) {\r\n    return axios.get(`https://www.omdbapi.com/?i=${id}&page=2&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log('service:', res.data);\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction searchMovieById(id) {\r\n    console.log('id service:', id);\r\n    var movie = {};\r\n    MOVIES.some(currMovie => {\r\n        if (id === currMovie.imdbID) {\r\n            console.log('movie-service:', currMovie);\r\n            movie = currMovie;\r\n        }\r\n    })\r\n    return movie;\r\n}\r\n\r\nfunction _updateMovie(movie) {\r\n    // console.log('movie to update: ', movie.Title);    \r\n    // return new Promise((resolve, reject) => { \r\n        // console.log('_update ', MOVIES[0]);        \r\n        const idx = MOVIES.findIndex( m => movie.imdbID === m.imdbID)\r\n        if (idx !== -1) {\r\n            MOVIES[idx] = movie\r\n            // console.log('update', idx, movie.Title);\r\n        }\r\n        // MOVIES = Object.assign({}, MOVIES);\r\n        // resolve(movie)\r\n    // })\r\n  }\r\n  \r\n  function _addMovie(movie) {\r\n    return new Promise((resolve, reject) => { \r\n        movie.imdbID = uniqid();\r\n        movie.Poster = 'img/movie3.png';\r\n        MOVIES.push(movie);\r\n        resolve(movie);\r\n    })\r\n  }\r\n  \r\n  function checkDuplicate(newMovie) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        // console.log('name:', movie.Title);\r\n        if (newMovie.Title === movie.Title) {\r\n            if (newMovie.imdbID !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already Exist!\").then( () => {\r\n                    // console.log('duplicate1: ', duplicate);    \r\n                    return false;\r\n                })\r\n                // return false\r\n            }\r\n        }\r\n    });\r\n    return duplicate;\r\n  }\r\n\r\n  function saveMovie(newMovie) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        // console.log('name:', movie.Title);\r\n        if (newMovie.Title === movie.Title) {\r\n            if (newMovie.imdbID !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already Exist!\").then( () => {\r\n                    // console.log('duplicate1: ', duplicate);    \r\n                    return false;\r\n                })\r\n                // return false\r\n            }\r\n        }\r\n    });\r\n    // console.log('duplicate2: ', duplicate);    \r\n    if (!duplicate) return newMovie.imdbID ? _updateMovie(newMovie) : _addMovie(newMovie)\r\n  }\r\n\r\n  function deleteMovie(id) {\r\n      console.log('id: ', id);      \r\n    return new Promise((resolve, reject) => { \r\n      const idx = MOVIES.findIndex( movie => movie.imdbID === id)\r\n      if (idx !== -1) {\r\n        MOVIES.splice(idx, 1)\r\n        console.log('deleted!');        \r\n      }\r\n      resolve()\r\n    })\r\n  }\r\n\r\n  function convertMonth(int) { \r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    for (let i=0; i<months.length; i++) {\r\n        if (i === int) return months[i]\r\n    }\r\n}\r\nexport default {\r\n    getMovies,\r\n    getMovieById,\r\n    saveMovie,\r\n    loadMovies,\r\n    deleteMovie,\r\n    checkDuplicate,\r\n    searchMovieById,\r\n    convertMonth\r\n}","import React , { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport './MoviePreview.css';\r\n\r\nclass MoviePreview extends Component {\r\n    state = {\r\n        movie: this.props.movie,\r\n        back: false,\r\n        edit: false\r\n    }\r\n    // componentDidMount() {\r\n    //     MovieService.getMovieById(this.props.movie.imdbID)\r\n    //     .then(data => {\r\n    //         // console.log('movie:', data);\r\n    //         this.setState({movie: data})\r\n    //     });\r\n    // }\r\n    editMovie= () => {\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    back = () => {\r\n        this.setState({back: !this.state.back})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    \r\n    render() {\r\n        const movie = this.state.movie;\r\n        if (this.state.back) {\r\n            return <Redirect to={`/movie`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            // return <Redirect to={`/movie/edit/${movie.imdbID}`}/>\r\n            return <Redirect to={{pathname: `/movie/edit/${movie.imdbID}`, movie: this.state.movie}} />\r\n        }\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png'\r\n        return (\r\n        <div className=\"movie-container flex column\">\r\n            <Link to={`/movie/${movie.imdbID}`} movie={movie} className=\"a-title\">\r\n               <h2 className=\"title\">{movie.Title.toLowerCase().substring(0,36)}</h2>\r\n            </Link>\r\n            {/* <div className=\"preview-body flex column\"> */}\r\n                <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                <p className=\"director\"><span>Directed by: </span>{movie.Director}</p>\r\n                <div className=\"year-container flex\">\r\n                    <p className=\"year\">{movie.Year},&nbsp;</p>\r\n                    <p className=\"runtime\"> {movie.Runtime}</p>\r\n                    {/* <p>{movie.imdbRating}</p> */}\r\n                </div>\r\n                <ul className=\"genre-list flex\">\r\n                    {movie.Genre.split(',').map(type => (\r\n                        <li className=\"genre\" key={type.id}>{type}</li>\r\n                        ))}\r\n                </ul>\r\n                {/* <p className=\"genre\">{movie.Genre.split(',')}</p> */}\r\n            {/* </div> */}\r\n            <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n            </button>\r\n       </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviePreview\r\n","import React , { Component } from 'react';\r\nimport MoviePreview from '../moviePreview/MoviePreview';\r\nimport MovieService from '../../services/MovieService';\r\nimport {Link} from 'react-router-dom';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Home.css';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            add: false,\r\n            movies: [],  //MovieService.getMovies(),\r\n            img: null\r\n        }\r\n    }\r\n    addMovie = () => {\r\n        this.setState({add: !this.state.add})\r\n    }\r\n    refreshMovies = () => {\r\n        // MovieService.getMovies()\r\n        // .then(res => {\r\n        //     console.log('dataaaa', res);\r\n        //     this.setState({movies: res});\r\n        // });\r\n    }\r\n    componentDidMount() {\r\n        MovieService.loadMovies()\r\n        .then(res => {\r\n            console.log('dataaaa', res);\r\n            this.setState({movies: res});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.add) {\r\n            return <Redirect to={{pathname: `/movie/edit/new`, updateMovie: this.updateMovie}} />\r\n        }\r\n        return (\r\n        <div className=\"movies flex column\">\r\n            <div className=\"sub-title flex\">\r\n                <p>Let's watch some movies!</p>\r\n                <button onClick={this.addMovie} className=\"btn add-btn\"><span>+</span>\r\n                    <FontAwesomeIcon icon=\"video\" title=\"add movie\"/>\r\n                </button>\r\n            </div>\r\n            <div className=\"movie-preview\">\r\n                <ul className=\"movies-list flex\">\r\n                    {this.state.movies && this.state.movies.map(movie => (\r\n                        <li className=\"movie-list\" key={movie.imdbID}>\r\n                            {/* <Link to={`/movie/${movie.imdbID}`} movie={movie}> */}\r\n                                <MoviePreview movie={movie}/>\r\n                            {/* </Link> */}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './MovieEdit.css';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            cancel: false,\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            movieDate: null\r\n            // wrongLine: false\r\n        };\r\n        this.saveMovie = this.saveMovie.bind(this);  \r\n    } \r\n    componentDidMount() {\r\n        // console.log('edit id', this.state.MovieId);\r\n        // MovieService.getMovieById(this.state.movieId)\r\n        // .then(data => {\r\n        //     // console.log('movie$$', data);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n        // .then(data => {\r\n            console.log('movie$$', currMovie);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        this.setState({movie: currMovie});\r\n    }\r\n    cancel = () => {\r\n        this.setState({cancel: !this.state.cancel})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    saveMovie(event) {\r\n        const movie = this.state.movie;\r\n        if (this.state.movieDate) movie.Released = this.state.movieDate;\r\n        console.log('movie to be saved:', movie);\r\n        var keyCount = 0;           //avoid empty lines for edited and new movie\r\n        for (var key in movie) {\r\n            if (movie[key] === '') {\r\n                console.log('edit- fill them all!');\r\n                swal(\"Fill all fields!\").then( () => {\r\n                    return;\r\n                })\r\n                return\r\n            }    \r\n            keyCount++;   \r\n        }\r\n        if (keyCount < 5) {         //avoid empty lines for a new movie\r\n            console.log('new- fill them all!', keyCount);            \r\n            swal(\"Fill all fields!\").then( () => {\r\n                return;\r\n            })\r\n            return\r\n        }\r\n        var title = movie.Title\r\n        for (let i=0; i<title.length; i++) {\r\n            // var newTitle = title;\r\n            if (\r\n                (title.charCodeAt(i) !==32 && title.charCodeAt(i) < 65 ) ||\r\n                title.charCodeAt(i) > 122 ||\r\n                (title.charCodeAt(i) > 90 && title.charCodeAt(i) < 97)\r\n                ) {\r\n                    console.log('i: ', title[i]);                    \r\n                    swal(\"Only English caracters!\").then( () => {\r\n                        return;\r\n                    })\r\n                    return\r\n                    // newTitle = title.substring(0,i) + title.substring(i+1, title.length); \r\n                    // i--;\r\n                    // console.log('wrong!:', newTitle); \r\n                    // title = newTitle; \r\n                }\r\n        }\r\n        const duplicate = MovieService.checkDuplicate(movie);\r\n        if (duplicate) return;\r\n        movie.Title = title;\r\n        event.preventDefault();\r\n        MovieService.saveMovie(movie);\r\n        this.setState({cancel: !this.state.cancel});\r\n        // this.props.location.refreshMovies();\r\n    }\r\n    handleTitle = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Title = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleDirector = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Director = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleYear = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Year = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleReleased = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        var dateReleased = Date.parse(event.target.value);\r\n        var newDate = new Date(dateReleased);\r\n        console.log('newDate: ', newDate, 'dateReleased', dateReleased);\r\n        var fullDate = '';\r\n        var month = MovieService.convertMonth(newDate.getMonth());\r\n        console.log(month);\r\n        fullDate = newDate.getDate()+' ' + month +' ' + newDate.getFullYear();\r\n        console.log('fullDate: ', fullDate);\r\n        newMovie.Released = event.target.value;\r\n        this.setState({movieDate: fullDate});\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleRuntime = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Runtime = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleGenre = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Genre = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    delete = () => {\r\n        swal({\r\n            title: \"Are you sure you want to delete this movie?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true,\r\n            className: \"swal-warning\"\r\n        }).then(willDelete => {\r\n            if (willDelete) {\r\n            MovieService.deleteMovie(this.state.movieId)\r\n                .then(() => {\r\n                    this.setState({cancel: !this.state.cancel})\r\n                    swal(\"Your movie has been deleted!\", {\r\n                    icon: \"success\",\r\n                    timer: 2000,\r\n                    className: \"swal-text\",\r\n                    button: false\r\n                    });\r\n                });\r\n            } else swal.close();\r\n        });\r\n    // MovieService.deleteMovie(this.state.movieId);\r\n    // this.setState({cancel: !this.state.cancel})\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.cancel) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var date = new Date();\r\n        date.setTime(Date.parse(movie.Released));\r\n\r\n        return (\r\n            <div className=\"edit flex column\">\r\n                <h1 className=\"edit-title\">{movie.imdbID? 'Edit' : 'Add Movie'}</h1>\r\n                <div className=\"form-edit flex column\">\r\n                    <div className=\"input-container flex\">\r\n                        <p>Title:</p>\r\n                        <input value={this.state.movie.Title} \r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleTitle}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                       <p>Director: </p> \r\n                        <input value={this.state.movie.Director}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleDirector}/>\r\n                    </div>\r\n                    {/* <div className=\"input-container flex\">\r\n                        <p>Year: </p>\r\n                        <input value={this.state.movie.Released}\r\n                            className = \"input-edit\"\r\n                            onChange={this.handleYear}/>\r\n                    </div> */}\r\n                    <div className=\"input-container flex\">\r\n                        <p>Released: </p>\r\n                        {/* <input value={date} */}\r\n                        <input value={this.state.movie.Released}\r\n                            className = \"input-edit\" type=\"date\"\r\n                            onChange={this.handleReleased}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>runtime: </p>\r\n                        <input value={this.state.movie.Runtime}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleRuntime}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>genre: </p>\r\n                        <input value={this.state.movie.Genre}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleGenre}/>\r\n                    </div>\r\n                    <div className=\"btns btns-edit flex\">\r\n                        <button className=\"btn\" onClick={this.saveMovie}>\r\n                            <FontAwesomeIcon icon=\"save\" title=\"save\"/>\r\n                        </button>\r\n                        <button className=\"btn\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn\" onClick={this.cancel}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './MovieDetails.css';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            // movie: this.props.location,\r\n            back: false,\r\n            edit: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // MovieService.getMovieById(this.state.movieId)\r\n        // .then(data => {\r\n        //     // console.log('movie$$', data);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        console.log('id', this.state.MovieId);\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n            console.log('movie$$', currMovie);\r\n        this.setState({movie: currMovie});\r\n    }\r\n    editMovie = () => {\r\n        // console.log('movies: ', MovieService.getUpdatedMovies());\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    back = () => {\r\n        this.setState({back: !this.state.back})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    delete = () => {\r\n        swal({\r\n            title: \"Are you sure you want to delete this movie?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true,\r\n            className: \"swal-warning\"\r\n        }).then(willDelete => {\r\n            if (willDelete) {\r\n            MovieService.deleteMovie(this.state.movieId)\r\n                .then(() => {\r\n                    this.setState({back: !this.state.back})\r\n                    swal(\"Your movie has been deleted!\", {\r\n                    icon: \"success\",\r\n                    timer: 2000,\r\n                    className: \"swal-text\",\r\n                    button: false\r\n                    });\r\n                });\r\n            } else swal.close();\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.back) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            return <Redirect to={`/movie/edit/${this.props.match.params.movieId}`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png'\r\n        return (\r\n            <div className=\"movie-details-container flex column\">\r\n                <h2 className=\"title title-details\">{movie.Title}</h2>\r\n                <div className=\"movie-details flex column\">\r\n                    <div className=\"details-container flex\">\r\n                        <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                        <div className=\"movie-text flex column\">\r\n                        {/* <div class=\"movie-info flex column\"> */}\r\n                            <p className=\"director\"><span className=\"bold\">Directed by: </span>{movie.Director}</p>\r\n                            <p className=\"actors\"><span className=\"bold\">Actors: </span>{movie.Actors? movie.Actors: 'Gal Gadot' }</p>\r\n                            <p className=\"rating\"><span className=\"bold\">IMDb rating: </span>{movie.imdbRating? movie.imdbRating: '2.5'}/10</p>\r\n                            <p className=\"released\"><span className=\"bold\">Released: </span>{movie.Released}</p>\r\n                        {/* </div> */}\r\n                            <div className=\"year-container flex\">\r\n                                {/* <p className=\"year\">{movie.Year},&nbsp;</p> */}\r\n                                <p className=\"runtime\"> {movie.Runtime},&nbsp;</p>\r\n                                <p className=\"language\"> {movie.Language? movie.Language: 'Jibrish'}</p>\r\n                            </div>\r\n                            <p className=\"plot\">{movie.Plot? movie.Plot: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btns flex\">\r\n                        <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                            <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-delete\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-back\" onClick={this.back}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n","import React, { Component } from 'react';\nimport Header from './cmps/header/Header';\nimport Home from './cmps/home/Home';\nimport movie from './cmps/home/Home';\nimport MovieEdit from './cmps/movieEdit/MovieEdit';\nimport MovieDetails from './cmps/movieDetails/MovieDetails';\nimport MovieService from './services/MovieService';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrashAlt, faUndo, faSave, faVideo } from '@fortawesome/free-solid-svg-icons'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nlibrary.add(faEdit)\nlibrary.add(faTrashAlt)\nlibrary.add(faUndo)\nlibrary.add(faSave)\nlibrary.add(faVideo)\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n      <div className=\"App\">\n        <Header className=\"App-header\"/>\n      </div>\n      <Switch className=\"body\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/movie\" component={movie}/>\n            <Route exact path=\"/movie/:movieId\" component={MovieDetails} /> \n            <Route exact path=\"/movie/edit/:movieId\" component={MovieEdit} />\n          </Switch>\n      </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App />\n</Router>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}