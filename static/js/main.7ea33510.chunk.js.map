{"version":3,"sources":["cmps/header/Header.js","services/MovieService.js","cmps/moviePreview/MoviePreview.js","cmps/home/Home.js","cmps/movieEdit/MovieEdit.js","cmps/movieDetails/MovieDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","Component","API_KEY","MOVIES","getMovieById","id","axios","get","concat","then","res","data","MovieService","getMovies","saveMovie","newMovie","movie","duplicate","some","Title","toLowerCase","imdbID","swal","Promise","resolve","reject","idx","findIndex","m","icon","timer","button","uniqid","Poster","push","_addMovie","loadMovies","prms","Search","forEach","all","sort","b","timeA","Runtime","timeB","deleteMovie","title","buttons","dangerMode","willDelete","splice","console","log","close","checkDuplicate","searchMovieById","currMovie","convertMonth","int","months","i","length","MoviePreview","state","_this","props","back","edit","info","editMovie","setState","delete","movieId","details","this","Redirect","to","pathname","imgSrc","Link","substring","alt","Director","Year","Genre","split","map","type","key","onClick","index_es","Home","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addMovie","add","refreshMovies","movies","img","_this2","updateMovie","cmps_moviePreview_MoviePreview","MovieDetails","cancel","handleTitle","event","JSON","parse","stringify","target","value","handleDirector","handleYear","handleReleased","dateReleased","Date","newDate","fullDate","month","getMonth","getDate","getFullYear","Released","movieDate","handleRuntime","handleGenre","match","params","bind","assertThisInitialized","keyCount","newTitle","charCodeAt","preventDefault","setTime","onChange","MovieId","Actors","imdbRating","Language","Plot","library","faEdit","faTrashAlt","faUndo","faSave","faVideo","faInfo","faPlus","App","HashRouter","Fragment","Header_Header","Switch","Route","exact","path","component","MovieEdit","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ea33510.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header flex\">\r\n                <img src=\"img/movie3.png\" className=\"header-img\"/>\r\n                <h1 className=\"header-title\">Herolo Cinema</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport axios from 'axios';\r\nimport uniqid from 'uniqid'\r\nimport swal from \"sweetalert\";\r\nconst API_KEY = 'cf5f5d9f';\r\nvar MOVIES = null;\r\n\r\n\r\nfunction loadMovies() {\r\n    // console.log(MOVIES);\r\n    if (MOVIES === null) {\r\n        return axios.get(`https://www.omdbapi.com/?s=job&type=movie&page=3&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log(res.data.Search);            \r\n            MOVIES = [];\r\n            var prms = []\r\n            res.data.Search.forEach(movie => {\r\n                prms.push(getMovieById(movie.imdbID)\r\n                .then (data  => {\r\n                    // var date = new Date();\r\n                    // date.setTime(Date.parse(data.Released));\r\n                    // data.Released = data;\r\n                    // console.log('movie from service: ', movie);                \r\n                    MOVIES.push(data)\r\n                    // console.log('movies:', MOVIES);\r\n                }))\r\n            })\r\n            return Promise.all(prms);\r\n            // MOVIES = res.data.Search;\r\n        }).then ( () => {\r\n\r\n            MOVIES.sort( (a,b) => {\r\n                var timeA = a.Runtime.toLowerCase();\r\n                var timeB = b.Runtime.toLowerCase();\r\n                if (timeA < timeB) return -1;\r\n                if (timeA > timeB) return 1;\r\n                return 0;            \r\n            })\r\n            // console.log('service:', MOVIES);\r\n            return MOVIES\r\n        })\r\n    } else return Promise.resolve(MOVIES);\r\n}\r\n\r\nfunction getMovies() {\r\n    if (MOVIES !== null) return MOVIES\r\n}\r\n\r\nfunction getMovieById(id) {\r\n    return axios.get(`https://www.omdbapi.com/?i=${id}&page=2&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log('service:', res.data);\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction searchMovieById(id) {\r\n    console.log('id service:', id);\r\n    var movie = {};\r\n    MOVIES.some(currMovie => {\r\n        if (id === currMovie.imdbID) {\r\n            console.log('movie-service:', currMovie);\r\n            movie = currMovie;\r\n        }\r\n    })\r\n    return movie;\r\n}\r\n\r\nfunction _updateMovie(movie) {\r\n    // console.log('movie to update: ', movie.Title);    \r\n    return new Promise((resolve, reject) => { \r\n        // console.log('_update ', MOVIES[0]);        \r\n        const idx = MOVIES.findIndex( m => movie.imdbID === m.imdbID)\r\n        if (idx !== -1) {\r\n            MOVIES[idx] = movie;\r\n            // console.log('update', idx, movie.Title);\r\n        }\r\n        // MOVIES = Object.assign({}, MOVIES);\r\n        resolve(movie);\r\n        swal(\"Your movie has been saved!\", {\r\n            icon: \"success\",\r\n            timer: 2000,\r\n            className: \"swal-text\",\r\n            button: false\r\n        });\r\n    })\r\n  }\r\n  \r\n  function _addMovie(movie) {\r\n    return new Promise((resolve, reject) => { \r\n        movie.imdbID = uniqid();\r\n        // movie.Year = '2018';\r\n        // console.log('year: ', movie.Released);        \r\n        movie.Poster = 'img/movie3.png';\r\n        MOVIES.push(movie);\r\n        resolve(movie);\r\n        swal(\"Your movie has been added!\", {\r\n            icon: \"success\",\r\n            timer: 2000,\r\n            className: \"swal-text\",\r\n            button: false\r\n        });\r\n    })\r\n  }\r\n  \r\n  function checkDuplicate(newMovie) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        // console.log('name:', movie.Title);\r\n        if (newMovie.Title === movie.Title) {\r\n            if (newMovie.imdbID !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already Exist!\").then( () => {\r\n                    // console.log('duplicate1: ', duplicate);    \r\n                    return false;\r\n                })\r\n                // return false\r\n            }\r\n        }\r\n    });\r\n    return duplicate;\r\n  }\r\n\r\n  function saveMovie(newMovie) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        // console.log('name:', movie.Title);\r\n        if (newMovie.Title.toLowerCase() === movie.Title.toLowerCase()) {\r\n            if (newMovie.imdbID !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already Exist!\").then( () => {\r\n                    // console.log('duplicate1: ', duplicate);    \r\n                    return false;\r\n                })\r\n                // return false\r\n            }\r\n        }\r\n    });\r\n    // console.log('duplicate2: ', duplicate);    \r\n    if (!duplicate) return newMovie.imdbID ? _updateMovie(newMovie) : _addMovie(newMovie)\r\n  }\r\n\r\n  function deleteMovie(id) {\r\n    return swal({\r\n        title: \"Are you sure you want to delete this movie?\",\r\n        icon: \"warning\",\r\n        buttons: [\"Cancel\", \"Delete\"],\r\n        dangerMode: true,\r\n        className: \"swal-warning\"\r\n    }).then(willDelete => {\r\n        if (willDelete) {\r\n            return new Promise((resolve, reject) => { \r\n                const idx = MOVIES.findIndex( movie => movie.imdbID === id)\r\n                if (idx !== -1) {\r\n                  MOVIES.splice(idx, 1)\r\n                  console.log('deleted!');        \r\n                }\r\n                resolve()\r\n              })\r\n            .then(() => {\r\n                // this.setState({cancel: !this.state.cancel})\r\n                swal(\"Your movie has been deleted!\", {\r\n                    icon: \"success\",\r\n                    timer: 2000,\r\n                    className: \"swal-text\",\r\n                    button: false\r\n                });\r\n            });\r\n        } else swal.close();\r\n    });\r\n// MovieService.deleteMovie(this.state.movieId);\r\n// this.setState({cancel: !this.state.cancel})\r\n}\r\n//   function deleteMovie(id) {\r\n//       console.log('id: ', id);      \r\n//     return new Promise((resolve, reject) => { \r\n//       const idx = MOVIES.findIndex( movie => movie.imdbID === id)\r\n//       if (idx !== -1) {\r\n//         MOVIES.splice(idx, 1)\r\n//         console.log('deleted!');        \r\n//       }\r\n//       resolve()\r\n//     })\r\n//   }\r\n\r\n  function convertMonth(int) { \r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    for (let i=0; i<months.length; i++) {\r\n        if (i === int) return months[i]\r\n    }\r\n}\r\nexport default {\r\n    getMovies,\r\n    getMovieById,\r\n    saveMovie,\r\n    loadMovies,\r\n    deleteMovie,\r\n    // setDelete,\r\n    checkDuplicate,\r\n    searchMovieById,\r\n    convertMonth\r\n}","import React , { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport './MoviePreview.css';\r\n\r\nclass MoviePreview extends Component {\r\n    state = {\r\n        movie: this.props.movie,\r\n        back: false,\r\n        edit: false,\r\n        info: false\r\n    }\r\n    // componentDidMount() {\r\n    //     MovieService.getMovieById(this.props.movie.imdbID)\r\n    //     .then(data => {\r\n    //         // console.log('movie:', data);\r\n    //         this.setState({movie: data})\r\n    //     });\r\n    // }\r\n    editMovie= () => {\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    // back = () => {\r\n    //     this.setState({back: !this.state.back})\r\n    //     // console.log('back', this.state.back);\r\n    // }\r\n    delete = () => {\r\n        MovieService.deleteMovie(this.state.movieId)\r\n        .then ( () => {\r\n            this.setState({back: !this.state.back})\r\n        })\r\n    }\r\n    details = () => {\r\n        this.setState({info: !this.state.info})\r\n    }\r\n    render() {\r\n        const movie = this.state.movie;\r\n        if (this.state.back) {\r\n            return <Redirect to={`/movie`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            // return <Redirect to={`/movie/edit/${movie.imdbID}`}/>\r\n            return <Redirect to={{pathname: `/movie/edit/${movie.imdbID}`, movie: this.state.movie}} />\r\n        }\r\n        else if (this.state.info) {\r\n            return <Redirect to={`/movie/${movie.imdbID}`} />\r\n        }\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png'\r\n        return (\r\n        <div className=\"movie-container flex column\">\r\n            <Link to={`/movie/${movie.imdbID}`} movie={movie} className=\"a-title\">\r\n               <h2 className=\"title\">{movie.Title.toLowerCase().substring(0,36)}</h2>\r\n            </Link>\r\n            {/* <div className=\"preview-body flex column\"> */}\r\n            <Link to={`/movie/${movie.imdbID}`} movie={movie} className=\"a-img\">\r\n                <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                </Link>\r\n                <p className=\"director\"><span className=\"bold\">Directed by: </span>{movie.Director}</p>\r\n                <div className=\"year-container flex\">\r\n                    <p className=\"year\">{movie.Year},&nbsp;</p>\r\n                    <p className=\"runtime\"> {movie.Runtime}</p>\r\n                    {/* <p>{movie.imdbRating}</p> */}\r\n                </div>\r\n                <ul className=\"genre-list flex\">\r\n                    {movie.Genre.split(',').map(type => (\r\n                        <li className=\"genre\" key={type.id}>{type}</li>\r\n                        ))}\r\n                </ul>\r\n                {/* <p className=\"genre\">{movie.Genre.split(',')}</p> */}\r\n            {/* </div> */}\r\n            <div className=\"btns flex\">\r\n                <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                    <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n                </button>\r\n                <button className=\"btn btn-delete ml15\" onClick={this.delete}>\r\n                    <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                </button>\r\n                <button className=\"btn btn-info ml15\" onClick={this.details}>\r\n                    <FontAwesomeIcon icon=\"info\" title=\"details\"/>\r\n                </button>\r\n            </div>\r\n       </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviePreview\r\n","import React , { Component } from 'react';\r\nimport MoviePreview from '../moviePreview/MoviePreview';\r\nimport MovieService from '../../services/MovieService';\r\nimport {Link} from 'react-router-dom';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Home.css';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            add: false,\r\n            movies: [],  //MovieService.getMovies(),\r\n            img: null\r\n        }\r\n    }\r\n    addMovie = () => {\r\n        this.setState({add: !this.state.add})\r\n    }\r\n    refreshMovies = () => {\r\n        // MovieService.getMovies()\r\n        // .then(res => {\r\n        //     console.log('dataaaa', res);\r\n        //     this.setState({movies: res});\r\n        // });\r\n    }\r\n    componentDidMount() {\r\n        MovieService.loadMovies()\r\n        .then(res => {\r\n            console.log('dataaaa', res);\r\n            this.setState({movies: res});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.add) {\r\n            return <Redirect to={{pathname: `/movie/edit/new`, updateMovie: this.updateMovie}} />\r\n        }\r\n        return (\r\n        <div className=\"movies flex column\">\r\n            <div className=\"sub-title flex\">\r\n                <p>Let's watch some movies!</p>\r\n                <button onClick={this.addMovie} className=\"btn add-btn\">\r\n                <div className=\"flex plus-add\">\r\n                    {/* <span>+</span> */}\r\n                    <FontAwesomeIcon icon=\"plus\" title=\"add movie\"/>\r\n                </div>\r\n                </button>\r\n            </div>\r\n            <div className=\"movie-preview\">\r\n                <ul className=\"movies-list flex\">\r\n                    {this.state.movies && this.state.movies.map(movie => (\r\n                        <li className=\"movie-list\" key={movie.imdbID}>\r\n                            {/* <Link to={`/movie/${movie.imdbID}`} movie={movie}> */}\r\n                                <MoviePreview movie={movie}/>\r\n                            {/* </Link> */}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './MovieEdit.css';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            cancel: false,\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            movieDate: null\r\n            // wrongLine: false\r\n        };\r\n        this.saveMovie = this.saveMovie.bind(this);  \r\n    } \r\n    componentDidMount() {\r\n        // console.log('edit id', this.state.MovieId);\r\n        // MovieService.getMovieById(this.state.movieId)\r\n        // .then(data => {\r\n        //     // console.log('movie$$', data);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n        // .then(data => {\r\n            console.log('movie$$', currMovie);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        this.setState({movie: currMovie});\r\n    }\r\n    cancel = () => {\r\n        this.setState({cancel: !this.state.cancel})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    saveMovie(event) {\r\n        const movie = this.state.movie;\r\n        if (this.state.movieDate) movie.Released = this.state.movieDate;\r\n        console.log('movie to be saved:', movie);\r\n        var keyCount = 0;           //avoid empty lines for edited and new movie\r\n        for (var key in movie) {\r\n            if (movie[key] === '') {\r\n                console.log('edit- fill them all!');\r\n                swal(\"Fill all fields!\").then( () => {\r\n                    return;\r\n                })\r\n                return\r\n            }    \r\n            keyCount++;   \r\n        }\r\n        if (keyCount < 5) {         //avoid empty lines for a new movie\r\n            console.log('new- fill them all!', keyCount);            \r\n            swal(\"Fill all fields!\").then( () => {\r\n                return;\r\n            })\r\n            return\r\n        }\r\n        var title = movie.Title\r\n        for (let i=0; i<title.length; i++) {\r\n            var newTitle = title;\r\n            if (\r\n                (title.charCodeAt(i) !==32 && title.charCodeAt(i) < 65 ) ||\r\n                title.charCodeAt(i) > 122 ||\r\n                (title.charCodeAt(i) > 90 && title.charCodeAt(i) < 97)\r\n                ) {\r\n                    // console.log('i: ', title[i]);                    \r\n                    // swal(\"Only English characters!\").then( () => {\r\n                    //     return;\r\n                    // })\r\n                    // return\r\n                    newTitle = title.substring(0,i) + title.substring(i+1, title.length); \r\n                    i--;\r\n                    console.log('wrong!:', newTitle); \r\n                    title = newTitle; \r\n                }\r\n        }\r\n        const duplicate = MovieService.checkDuplicate(movie);\r\n        if (duplicate) return;\r\n        movie.Title = title;\r\n        event.preventDefault();\r\n        MovieService.saveMovie(movie);\r\n        this.setState({cancel: !this.state.cancel});\r\n        // this.props.location.refreshMovies();\r\n    }\r\n    handleTitle = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Title = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleDirector = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Director = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleYear = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Year = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleReleased = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        var dateReleased = Date.parse(event.target.value);\r\n        var newDate = new Date(dateReleased);\r\n        console.log('newDate: ', newDate, 'dateReleased', dateReleased);\r\n        var fullDate = '';\r\n        var month = MovieService.convertMonth(newDate.getMonth());\r\n        // console.log(month);\r\n        fullDate = newDate.getDate()+' ' + month +' ' + newDate.getFullYear();\r\n        newMovie.Year = newDate.getFullYear();\r\n        // console.log('fullDate: ', fullDate);\r\n        newMovie.Released = event.target.value;\r\n        this.setState({movieDate: fullDate});\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleRuntime = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Runtime = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleGenre = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Genre = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    delete = () => {\r\n        MovieService.deleteMovie(this.state.movieId)\r\n        .then ( () => {\r\n            this.setState({cancel: !this.state.cancel})\r\n        })\r\n        // swal({\r\n        //     title: \"Are you sure you want to delete this movie?\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true,\r\n        //     className: \"swal-warning\"\r\n        // }).then(willDelete => {\r\n        //     if (willDelete) {\r\n        //     MovieService.deleteMovie(this.state.movieId)\r\n        //         .then(() => {\r\n        //             this.setState({cancel: !this.state.cancel})\r\n        //             swal(\"Your movie has been deleted!\", {\r\n        //                 icon: \"success\",\r\n        //                 timer: 2000,\r\n        //                 className: \"swal-text\",\r\n        //                 button: false\r\n        //             });\r\n        //         });\r\n        //     } else swal.close();\r\n        // });\r\n    // MovieService.deleteMovie(this.state.movieId);\r\n    // this.setState({cancel: !this.state.cancel})\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.cancel) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var date = new Date();\r\n        date.setTime(Date.parse(movie.Released));\r\n\r\n        return (\r\n            <div className=\"edit flex column\">\r\n                <h1 className=\"edit-title\">{movie.imdbID? 'Edit' : 'Add Movie'}</h1>\r\n                <div className=\"form-edit flex column\">\r\n                    <div className=\"input-container flex\">\r\n                        <p>Title:</p>\r\n                        <input value={this.state.movie.Title} \r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleTitle}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                       <p>Director: </p> \r\n                        <input value={this.state.movie.Director}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleDirector}/>\r\n                    </div>\r\n                    {/* <div className=\"input-container flex\">\r\n                        <p>Year: </p>\r\n                        <input value={this.state.movie.Released}\r\n                            className = \"input-edit\"\r\n                            onChange={this.handleYear}/>\r\n                    </div> */}\r\n                    <div className=\"input-container flex\">\r\n                        <p>Released: </p>\r\n                        {/* <input value={date} */}\r\n                        <input value={this.state.movie.Released}\r\n                            className = \"input-edit\" type=\"date\"\r\n                            onChange={this.handleReleased}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>runtime: </p>\r\n                        <input value={this.state.movie.Runtime}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleRuntime}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>genre: </p>\r\n                        <input value={this.state.movie.Genre}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleGenre}/>\r\n                    </div>\r\n                    <div className=\"btns btns-edit flex\">\r\n                        <button className=\"btn\" onClick={this.saveMovie}>\r\n                            <FontAwesomeIcon icon=\"save\" title=\"save\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-delete ml15\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-back ml15\" onClick={this.cancel}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './MovieDetails.css';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            // movie: this.props.location,\r\n            back: false,\r\n            edit: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // MovieService.getMovieById(this.state.movieId)\r\n        // .then(data => {\r\n        //     // console.log('movie$$', data);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        console.log('id', this.state.MovieId);\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n            console.log('movie$$', currMovie);\r\n        this.setState({movie: currMovie});\r\n    }\r\n    editMovie = () => {\r\n        // console.log('movies: ', MovieService.getUpdatedMovies());\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    back = () => {\r\n        this.setState({back: !this.state.back})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    delete = () => {\r\n        MovieService.deleteMovie(this.state.movieId)\r\n        .then ( () => {\r\n            this.setState({back: !this.state.back})\r\n        })\r\n    }\r\n    //     swal({\r\n    //         title: \"Are you sure you want to delete this movie?\",\r\n    //         icon: \"warning\",\r\n    //         buttons: [\"Cancel\", \"Delete\"],\r\n    //         dangerMode: true,\r\n    //         className: \"swal-warning\"\r\n    //     }).then(willDelete => {\r\n    //         if (willDelete) {\r\n    //         MovieService.deleteMovie(this.state.movieId)\r\n    //             .then(() => {\r\n    //                 this.setState({back: !this.state.back})\r\n    //                 swal(\"Your movie has been deleted!\", {\r\n    //                 icon: \"success\",\r\n    //                 timer: 2000,\r\n    //                 className: \"swal-text\",\r\n    //                 button: false\r\n    //                 });\r\n    //             });\r\n    //         } else swal.close();\r\n    //     });\r\n    // }\r\n    render() {\r\n        if (this.state.back) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            return <Redirect to={`/movie/edit/${this.props.match.params.movieId}`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png'\r\n        return (\r\n            <div className=\"movie-details-container flex column\">\r\n                <h2 className=\"title title-details\">{movie.Title}</h2>\r\n                <div className=\"movie-details flex column\">\r\n                    <div className=\"details-container flex\">\r\n                        <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                        <div className=\"movie-text flex column\">\r\n                        {/* <div class=\"movie-info flex column\"> */}\r\n                            <p className=\"director mb15\"><span className=\"bold\">Directed by: </span>{movie.Director}</p>\r\n                            <p className=\"actors mb15\"><span className=\"bold\">Actors: </span>{movie.Actors? movie.Actors: 'Gal Gadot' }</p>\r\n                            <p className=\"rating mb15\"><span className=\"bold\">IMDb rating: </span>{movie.imdbRating? movie.imdbRating: '2.5'}/10</p>\r\n                            <p className=\"released mb15\"><span className=\"bold\">Released: </span>{movie.Released}</p>\r\n                        {/* </div> */}\r\n                            <div className=\"year-container mb15 flex\">\r\n                                {/* <p className=\"year\">{movie.Year},&nbsp;</p> */}\r\n                                <p className=\"runtime\"> {movie.Runtime},&nbsp;</p>\r\n                                <p className=\"language\"> {movie.Language? movie.Language: 'Jibrish'}</p>\r\n                            </div>\r\n                            <p className=\"plot\">{movie.Plot? movie.Plot: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btns flex\">\r\n                        <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                            <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-delete ml15\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-back ml15\" onClick={this.back}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n","import React, { Component } from 'react';\nimport Header from './cmps/header/Header';\nimport Home from './cmps/home/Home';\nimport movie from './cmps/home/Home';\nimport MovieEdit from './cmps/movieEdit/MovieEdit';\nimport MovieDetails from './cmps/movieDetails/MovieDetails';\nimport MovieService from './services/MovieService';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrashAlt, faUndo, faSave, faVideo, faInfo, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nlibrary.add(faEdit)\nlibrary.add(faTrashAlt)\nlibrary.add(faUndo)\nlibrary.add(faSave)\nlibrary.add(faVideo)\nlibrary.add(faInfo)\nlibrary.add(faPlus)\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n      <div className=\"App\">\n        <Header className=\"App-header\"/>\n      </div>\n      <Switch className=\"body\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/movie\" component={movie}/>\n            <Route exact path=\"/movie/:movieId\" component={MovieDetails} /> \n            <Route exact path=\"/movie/edit/:movieId\" component={MovieEdit} />\n          </Switch>\n      </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App />\n</Router>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}