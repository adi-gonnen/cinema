{"version":3,"sources":["cmps/header/Header.js","cmps/moviePreview/MoviePreview.js","services/MovieService.js","cmps/home/Home.js","cmps/movieEdit/MovieEdit.js","cmps/movieDetails/MovieDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","Component","MoviePreview","state","movie","_this","props","edit","info","editMovie","setState","details","this","Redirect","concat","imdbID","imgStyle","backgroundImage","Poster","backgroundSize","backgroundPosition","backgroundrepeat","Title","toLowerCase","substring","style","Director","Year","Runtime","Genre","replace","split","map","type","key","onClick","index_es","icon","title","API_KEY","MOVIES","TEMPMOVIES","KEYWORD","PAGE","getMovieById","id","axios","get","then","res","data","MovieService","getMovies","addSearchWord","word","console","log","getNextPage","number","saveMovie","newMovie","Promise","resolve","reject","idx","findIndex","m","swal","timer","button","uniqid","push","_addMovie","loadMovies","Error","prms","Search","forEach","all","sort","b","timeA","timeB","deleteMovie","buttons","dangerMode","willDelete","splice","close","checkDuplicate","duplicate","some","searchMovieById","currMovie","convertMonth","int","months","i","length","Home","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addMovie","add","handleSearch","event","searchWord","target","value","searchMovie","numberOfPage","movies","nextMovies","img","_this2","pathname","updateMovie","placeholder","onChange","cmps_moviePreview_MoviePreview","MovieDetails","cancel","movieId","match","params","movieDate","componentDidMount","Released","keyCount","newTitle","charCodeAt","preventDefault","handleTitle","JSON","parse","stringify","handleDirector","handleYear","handleReleased","fullDate","dateReleased","Date","newDate","month","getMonth","getDate","getFullYear","handleRuntime","handleGenre","setTime","back","delete","imgSrc","Actors","imdbRating","Language","Plot","library","faEdit","faTrashAlt","faUndo","faSave","faVideo","faInfo","faPlus","faSearch","faChevronCircleRight","App","HashRouter","Fragment","Header_Header","Switch","Route","exact","path","component","MovieEdit","Boolean","window","location","hostname","reducers","combineReducers","movieState","arguments","undefined","action","toConsumableArray","store","createStore","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faf86ac5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header flex\">\r\n                <Link to={\"/\"}>\r\n                    <img src=\"img/movie3.png\" className=\"header-img\" alt=\"\"/>\r\n                </Link>\r\n                <Link to={\"/\"}>\r\n                    <h1 className=\"header-title\">My Cinema</h1>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React , { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './MoviePreview.css';\r\n\r\nclass MoviePreview extends Component {\r\n    state = {\r\n        movie: this.props.movie,\r\n        edit: false,\r\n        info: false\r\n    }\r\n    editMovie= () => {\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    details = () => {\r\n        this.setState({info: !this.state.info})\r\n    }\r\n    render() {\r\n        const movie = this.state.movie;\r\n        if (this.state.edit) {\r\n            return <Redirect to={`/movie/edit/${movie.imdbID}`}/>\r\n        }\r\n        else if (this.state.info) {\r\n            return <Redirect to={`/movie/${movie.imdbID}`} />\r\n        }\r\n        var imgSrc = null\r\n        if (!movie.Poster || movie.Poster === 'N/A') imgSrc = 'img/movie3.png';\r\n        else imgSrc = movie.Poster;\r\n        const imgStyle = {\r\n            backgroundImage: 'url(' + imgSrc + ')',\r\n            backgroundSize: 'cover', \r\n            backgroundPosition: 'center', \r\n            backgroundrepeat: 'no-repeat',\r\n        }\r\n        return (\r\n        <div className=\"movie-container flex column\">\r\n            <Link to={`/movie/${movie.imdbID}`} movie={movie} className=\"a-title\">\r\n               <h2 className=\"title\">{movie.Title.toLowerCase().substring(0,36)}</h2>\r\n            </Link>\r\n            <Link to={`/movie/${movie.imdbID}`} style={imgStyle} movie={movie} className=\"a-img\"/>\r\n            <p className=\"director\"><span className=\"bold\">Directed by: </span>{movie.Director}</p>\r\n            <div className=\"year-container flex\">\r\n                <p className=\"year\">{movie.Year},&nbsp; &nbsp;</p>\r\n                <p className=\"runtime\"> {movie.Runtime}</p>\r\n            </div>\r\n            <div className=\"genre-list flex\">\r\n                <ul className=\"ul-genre flex\">\r\n                    {movie.Genre.replace(/,/g,\"\").split(' ').map(type => (\r\n                        <li className=\"genre\" key={type}>{type}</li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"btns flex\">\r\n                <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                    <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n                </button>\r\n                <button className=\"btn btn-info ml15\" onClick={this.details}>\r\n                    <FontAwesomeIcon icon=\"info\" title=\"details\"/>\r\n                </button>\r\n            </div>\r\n       </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviePreview\r\n","\r\nimport axios from 'axios';\r\nimport uniqid from 'uniqid'\r\nimport swal from \"sweetalert\";\r\nconst API_KEY = 'cf5f5d9f';\r\nvar MOVIES = null;\r\nvar TEMPMOVIES = [];\r\nvar KEYWORD = 'job';\r\nvar PAGE = 3;\r\n\r\n\r\nfunction loadMovies() {\r\n    if (MOVIES === null) {\r\n        return axios.get(`https://www.omdbapi.com/?s=${KEYWORD}&page=${PAGE}&type=movie&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            if (res.data.Error === \"Too many results.\") {\r\n                swal(\"Too many results. Try to be more specific\").then( () => {\r\n                    return;\r\n                })\r\n                MOVIES = TEMPMOVIES;\r\n            } else {\r\n                MOVIES = [];\r\n                var prms = []\r\n                res.data.Search.forEach(movie => {\r\n                    prms.push(getMovieById(movie.imdbID)\r\n                    .then (data  => {\r\n                        MOVIES.push(data)\r\n                    }))\r\n                })\r\n                return Promise.all(prms);\r\n            }\r\n        }).then ( () => {\r\n            console.log('then:' , MOVIES);    \r\n            MOVIES.sort( (a,b) => {\r\n                var timeA = a.Runtime.toLowerCase();\r\n                var timeB = b.Runtime.toLowerCase();\r\n                if (timeA < timeB) return -1;\r\n                if (timeA > timeB) return 1;\r\n                return 0;            \r\n            })\r\n            // console.log('movies:', MOVIES);            \r\n            return MOVIES\r\n        })\r\n    } else return Promise.resolve(MOVIES);\r\n}\r\n\r\nfunction getMovies() {\r\n    if (MOVIES !== null) return MOVIES\r\n}\r\n\r\nfunction addSearchWord(word) {\r\n    word === ''? KEYWORD = 'first': KEYWORD = word;\r\n    PAGE = 1;\r\n    TEMPMOVIES = MOVIES;\r\n    MOVIES = null;\r\n    console.log('key word: ', KEYWORD);    \r\n}\r\n\r\nfunction getNextPage(number) {\r\n    PAGE = number;\r\n    MOVIES = null;\r\n    console.log('page-service: ', PAGE);  \r\n}\r\n\r\nfunction getMovieById(id) {\r\n    return axios.get(`https://www.omdbapi.com/?i=${id}&page=2&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log('service:', res.data);\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction searchMovieById(id) {\r\n    var movie = {};\r\n    MOVIES.some(currMovie => {\r\n        if (id === currMovie.imdbID) {\r\n            movie = currMovie;\r\n        }\r\n    })\r\n    return movie;\r\n}\r\n\r\nfunction _updateMovie(movie) {\r\n    return new Promise((resolve, reject) => { \r\n        const idx = MOVIES.findIndex( m => movie.imdbID === m.imdbID)\r\n        if (idx !== -1) {\r\n            MOVIES[idx] = movie;\r\n        }\r\n        resolve(movie);\r\n        swal(\"Your movie has been saved!\", {\r\n            icon: \"success\",\r\n            timer: 2000,\r\n            className: \"swal-text\",\r\n            button: false\r\n        });\r\n    })\r\n  }\r\n  \r\n  function _addMovie(movie) {\r\n    return new Promise((resolve, reject) => { \r\n        movie.imdbID = uniqid();\r\n        movie.Poster = 'img/movie3.png';\r\n        MOVIES.push(movie);\r\n        resolve(movie);\r\n        swal(\"Your movie has been added!\", {\r\n            icon: \"success\",\r\n            timer: 2000,\r\n            className: \"swal-text\",\r\n            button: false\r\n        });\r\n    })\r\n  }\r\n  \r\n  function checkDuplicate(title, id) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        if (title.toLowerCase() === movie.Title.toLowerCase()) {\r\n            if (id !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already exist!\").then( () => {\r\n                    return duplicate;\r\n                })\r\n            }\r\n        }\r\n    });\r\n    return duplicate;\r\n  }\r\n\r\n  function saveMovie(newMovie) {\r\n    return newMovie.imdbID ? _updateMovie(newMovie) : _addMovie(newMovie)\r\n  }\r\n\r\n  function deleteMovie(id) {\r\n    return swal({\r\n        title: \"Are you sure you want to delete this movie?\",\r\n        icon: \"warning\",\r\n        buttons: [\"Cancel\", \"Delete\"],\r\n        dangerMode: true,\r\n        className: \"swal-warning\"\r\n    }).then(willDelete => {\r\n        if (willDelete) {\r\n            return new Promise((resolve, reject) => { \r\n                const idx = MOVIES.findIndex( movie => movie.imdbID === id)\r\n                if (idx !== -1) {\r\n                  MOVIES.splice(idx, 1)\r\n                }\r\n                resolve()\r\n            })\r\n            .then(() => {\r\n                swal(\"Your movie has been deleted!\", {\r\n                    icon: \"success\",\r\n                    timer: 2000,\r\n                    className: \"swal-text\",\r\n                    button: false\r\n                });\r\n            });\r\n        } else swal.close();\r\n    });\r\n}\r\n\r\nfunction convertMonth(int) { \r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    for (let i=0; i<months.length; i++) {\r\n        if (i === int) return months[i]\r\n    }\r\n}\r\nexport default {\r\n    getMovies,\r\n    getMovieById,\r\n    addSearchWord,\r\n    getNextPage,\r\n    saveMovie,\r\n    loadMovies,\r\n    deleteMovie,\r\n    checkDuplicate,\r\n    searchMovieById,\r\n    convertMonth\r\n}","import React , { Component } from 'react';\r\nimport MoviePreview from '../moviePreview/MoviePreview';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Home.css';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            add: false,\r\n            movies: [],  \r\n            img: null,\r\n            searchWord: '',\r\n            numberOfPage: 1\r\n        }\r\n    }\r\n    addMovie = () => {\r\n        this.setState({add: !this.state.add})\r\n    }\r\n    handleSearch = (event) => {\r\n        this.searchWord = event.target.value;\r\n    }\r\n    searchMovie = () => {\r\n        console.log(this.searchWord); \r\n        this.numberOfPage = 1;       \r\n        MovieService.addSearchWord(this.searchWord);\r\n        MovieService.loadMovies()\r\n        .then(res => {\r\n            console.log('movies with search: ', res);            \r\n            this.setState({movies: res});\r\n        });\r\n    }\r\n    nextMovies = () => {\r\n        console.log('page before: ', this.state.numberOfPage);        \r\n        this.setState({numberOfPage: +this.state.numberOfPage + 1});\r\n        console.log('page after: ', this.state.numberOfPage);        \r\n        MovieService.getNextPage(this.state.numberOfPage);\r\n        MovieService.loadMovies()\r\n        .then(res => {\r\n            console.log('movies with search: ', res);            \r\n            this.setState({movies: res});\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        console.log('page did mount: ', this.state.numberOfPage);   \r\n        MovieService.loadMovies()\r\n        .then(res => {\r\n            this.setState({movies: res});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.add) {\r\n            return <Redirect to={{pathname: `/movie/edit/new`, updateMovie: this.updateMovie}} />\r\n        }\r\n        return (\r\n        <div className=\"movies flex column\">\r\n            <div className=\"sub-title flex\">\r\n                <p>search movies:</p>\r\n                <div className=\"serach-container flex\">\r\n                    <input placeholder=\"enter key word/s\" className=\"search-line\"\r\n                        onChange={this.handleSearch}/>\r\n                    <button onClick={this.searchMovie} className=\"btn search-btn\">\r\n                        <div className=\"flex search\">\r\n                            <FontAwesomeIcon icon=\"search\" title=\"search movie\"/>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div className=\"btns-home-container flex\">\r\n                    <button onClick={this.nextMovies} className=\"btn next-btn\">\r\n                        <div className=\"flex next-arrow\">\r\n                            <FontAwesomeIcon icon=\"chevron-circle-right\" title=\"next 10 movies\"/>\r\n                        </div>\r\n                    </button>\r\n                    <button onClick={this.addMovie} className=\"btn add-btn\">\r\n                        <div className=\"flex plus-add\">\r\n                            <FontAwesomeIcon icon=\"plus\" title=\"add movie\"/>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"movie-preview\">\r\n                <ul className=\"movies-list flex\">\r\n                    {this.state.movies && this.state.movies.map(movie => (\r\n                        <li className=\"movie-list\" key={movie.imdbID}>\r\n                            <MoviePreview movie={movie}/>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\nimport './MovieEdit.css';\r\n\r\n// const EditMovie = ({ dispatch }) => {\r\nexport default class MovieDetails extends Component {\r\n    // constructor(props, context) {\r\n    //     super(props, context);\r\n        state = {\r\n            cancel: false,\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            movieDate: null\r\n        };\r\n        // this.saveMovie = this.saveMovie.bind(this);  \r\n    // } \r\n    componentDidMount = () => {\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n        this.setState({movie: currMovie});\r\n    }\r\n    cancel = () => {\r\n        this.setState({cancel: !this.state.cancel})\r\n    }\r\n    saveMovie = (event) => {\r\n        const movie = this.state.movie;\r\n        if (this.state.movieDate) movie.Released = this.state.movieDate;\r\n        console.log('movie to be saved:', movie);\r\n        var keyCount = 0;           //avoid empty lines for edited and new movie\r\n        for (var key in movie) {\r\n            if (movie[key] === '') {\r\n                swal(\"Fill all fields!\").then( () => {\r\n                    return;\r\n                })\r\n                return\r\n            }    \r\n            keyCount++;   \r\n        }\r\n        if (keyCount < 5) {         //avoid empty lines for a new movie\r\n            swal(\"Fill all fields!\").then( () => {\r\n                return;\r\n            })\r\n            return\r\n        }\r\n        var title = movie.Title         //delete non-english characters from title\r\n        for (let i=0; i<title.length; i++) {\r\n            var newTitle = title;\r\n            if (\r\n                (title.charCodeAt(i) !==32 && title.charCodeAt(i) < 65 ) ||\r\n                title.charCodeAt(i) > 122 ||\r\n                (title.charCodeAt(i) > 90 && title.charCodeAt(i) < 97)\r\n                ) {\r\n                    newTitle = title.substring(0,i) + title.substring(i+1, title.length); \r\n                    i--;\r\n                    title = newTitle; \r\n                }\r\n        }\r\n        const duplicate = MovieService.checkDuplicate(title, this.state.movieId);\r\n        if (duplicate) return;\r\n        movie.Title = title;\r\n        event.preventDefault();\r\n        // dispatch(saveMovie(this.state.movie))\r\n        MovieService.saveMovie(movie);\r\n        this.setState({cancel: !this.state.cancel});\r\n    }\r\n    handleTitle = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Title = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleDirector = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Director = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleYear = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Year = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleReleased = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        var dateReleased = Date.parse(event.target.value);\r\n        var newDate = new Date(dateReleased);\r\n        var fullDate = '';\r\n        var month = MovieService.convertMonth(newDate.getMonth());\r\n        fullDate = newDate.getDate()+' ' + month +' ' + newDate.getFullYear();\r\n        newMovie.Year = newDate.getFullYear();\r\n        newMovie.Released = event.target.value;\r\n        this.setState({movieDate: fullDate});\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleRuntime = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Runtime = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleGenre = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Genre = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    deleteMovie = () => {\r\n        MovieService.deleteMovie(this.state.movieId)\r\n        .then ( () => {\r\n            this.setState({cancel: !this.state.cancel})\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.cancel) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var date = new Date();\r\n        date.setTime(Date.parse(movie.Released));\r\n\r\n        return (\r\n            <div className=\"edit flex column\">\r\n                <h1 className=\"edit-title\">{movie.imdbID? 'Edit' : 'Add Movie'}</h1>\r\n                <div className=\"form-edit flex column\">\r\n                    <div className=\"input-container flex\">\r\n                        <p>Title:</p>\r\n                        <input value={this.state.movie.Title} \r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleTitle}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                       <p>Director: </p> \r\n                        <input value={this.state.movie.Director}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleDirector}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>Released: </p>\r\n                        <input value={this.state.movie.Released}\r\n                            className = \"input-edit\" type=\"date\"\r\n                            onChange={this.handleReleased}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>runtime: </p>\r\n                        <input value={this.state.movie.Runtime}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleRuntime}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>genre: </p>\r\n                        <input value={this.state.movie.Genre}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleGenre}/>\r\n                    </div>\r\n                    <div className=\"btns btns-edit flex\">\r\n                        <button className=\"btn\" onClick={this.saveMovie}>\r\n                            <FontAwesomeIcon icon=\"save\" title=\"save\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-delete ml15\" onClick={this.deleteMovie}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-back ml15\" onClick={this.cancel}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// export default connect()(EditMovie)","import React, {Component} from 'react';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './MovieDetails.css';\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            back: false,\r\n            edit: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId);\r\n        this.setState({movie: currMovie});\r\n    }\r\n    editMovie = () => {\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    back = () => {\r\n        this.setState({back: !this.state.back})\r\n    }\r\n    delete = () => {\r\n        MovieService.deleteMovie(this.state.movieId)\r\n        .then ( () => {\r\n            this.setState({back: !this.state.back})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.back) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            return <Redirect to={`/movie/edit/${this.props.match.params.movieId}`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png';\r\n\r\n        return (\r\n            <div className=\"movie-details-container flex column\">\r\n                <h2 className=\"title title-details\">{movie.Title}</h2>\r\n                <div className=\"movie-details flex column\">\r\n                    <div className=\"details-container flex\">\r\n                        <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                        <div className=\"movie-text flex column\">\r\n                            <p className=\"director mb15\"><span className=\"bold\">Directed by: </span>{movie.Director}</p>\r\n                            <p className=\"actors mb15\"><span className=\"bold\">Actors: </span>{movie.Actors? movie.Actors: 'Gal Gadot' }</p>\r\n                            <p className=\"rating mb15\"><span className=\"bold\">IMDb rating: </span>{movie.imdbRating? movie.imdbRating: '2.5'}/10</p>\r\n                            <p className=\"released mb15\"><span className=\"bold\">Released: </span>{movie.Released}</p>\r\n                            <div className=\"year-container mb15 flex\">\r\n                                <p className=\"runtime\"> {movie.Runtime},&nbsp;</p>\r\n                                <p className=\"language\"> {movie.Language? movie.Language: 'Jibrish'}</p>\r\n                            </div>\r\n                            <p className=\"plot\">{movie.Plot? movie.Plot: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btns flex\">\r\n                        <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                            <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-delete ml15\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-back ml15\" onClick={this.back}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n","import React, { Component } from 'react';\nimport Header from './cmps/header/Header';\nimport Home from './cmps/home/Home';\nimport movie from './cmps/home/Home';\nimport MovieEdit from './cmps/movieEdit/MovieEdit';\nimport MovieDetails from './cmps/movieDetails/MovieDetails';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faEdit, faTrashAlt, faUndo, faSave, faVideo, faInfo, faPlus, faSearch, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nlibrary.add(faEdit)\nlibrary.add(faTrashAlt)\nlibrary.add(faUndo)\nlibrary.add(faSave)\nlibrary.add(faVideo)\nlibrary.add(faInfo)\nlibrary.add(faPlus)\nlibrary.add(faSearch)\nlibrary.add(faChevronCircleRight)\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n      <div className=\"App\">\n        <Header className=\"App-header\"/>\n      </div>\n      <Switch className=\"body\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/movie\" component={movie}/>\n            <Route exact path=\"/movie/:movieId\" component={MovieDetails} /> \n            <Route exact path=\"/movie/edit/:movieId\" component={MovieEdit} />\n          </Switch>\n      </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { render } from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\n// import rootReducer from './reducers'\n\n// ReactDOM.render(\n    // {/* <Router basename={process.env.PUBLIC_URL}>\n    //     <App />\n    // </Router>, document.getElementById('root')); \n  // }\n\nconst movieReduser = (state = [], action) => {\n  switch (action.type) {\n      case 'SAVE_MOVIE':\n          return [\n          ...state,\n          {\n              id: action.id,\n              movie: action.movie,\n          }\n          ]\n      default: return state\n  }\n}\nconst reducers = combineReducers({\n  movieState: movieReduser,\n});\n\nconst store = createStore(reducers)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n   \n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}