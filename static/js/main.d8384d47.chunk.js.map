{"version":3,"sources":["cmps/header/Header.js","services/MovieService.js","cmps/moviePreview/MoviePreview.js","cmps/home/Home.js","cmps/movieEdit/MovieEdit.js","cmps/movieDetails/MovieDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","Component","API_KEY","MOVIES","getMovieById","id","axios","get","concat","then","res","data","MovieService","getMovies","saveMovie","newMovie","movie","duplicate","some","Title","imdbID","swal","idx","findIndex","m","_updateMovie","Promise","resolve","reject","uniqid","Poster","push","loadMovies","prms","Search","forEach","all","deleteMovie","console","log","splice","checkDuplicate","searchMovieById","currMovie","MoviePreview","state","_this","props","back","edit","editMovie","setState","this","Redirect","to","pathname","imgSrc","Link","toLowerCase","substring","alt","Director","Year","Runtime","Genre","split","map","type","key","onClick","index_es","icon","title","Home","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addMovie","add","refreshMovies","movies","img","_this2","updateMovie","cmps_moviePreview_MoviePreview","MovieDetails","cancel","handleTitle","event","JSON","parse","stringify","target","value","handleDirector","handleYear","handleRuntime","handleGenre","delete","buttons","dangerMode","willDelete","movieId","timer","button","close","match","params","bind","assertThisInitialized","keyCount","i","length","charCodeAt","preventDefault","onChange","MovieId","location","Actors","imdbRating","Language","Plot","library","faEdit","faTrashAlt","faUndo","faSave","App","HashRouter","Fragment","Header_Header","Switch","Route","exact","path","component","MovieEdit","Boolean","window","hostname","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8384d47.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header flex\">\r\n                <img src=\"img/movie3.png\" className=\"header-img\"/>\r\n                <h1 className=\"header-title\">Herolo Cinema</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport axios from 'axios';\r\nimport uniqid from 'uniqid'\r\nimport swal from \"sweetalert\";\r\nconst API_KEY = 'cf5f5d9f';\r\nvar MOVIES = null;\r\n\r\n\r\nfunction loadMovies() {\r\n    // console.log(MOVIES);\r\n    if (MOVIES === null) {\r\n        return axios.get(`https://www.omdbapi.com/?s=job&type=movie&page=3&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log(res.data.Search);            \r\n            MOVIES = [];\r\n            var prms = []\r\n            res.data.Search.forEach(movie => {\r\n                prms.push(getMovieById(movie.imdbID)\r\n                .then (data  => {\r\n                    // console.log('movie from service: ', movie);                \r\n                    MOVIES.push(data)\r\n                    // console.log('movies:', MOVIES);\r\n                }))\r\n            })\r\n            return Promise.all(prms);\r\n            // MOVIES = res.data.Search;\r\n        }).then ( () => {\r\n            // console.log('service:', MOVIES);\r\n            return MOVIES\r\n        })\r\n    } else return Promise.resolve(MOVIES);\r\n}\r\n\r\nfunction getMovies() {\r\n    if (MOVIES !== null) return MOVIES\r\n}\r\n\r\nfunction getMovieById(id) {\r\n    return axios.get(`http://www.omdbapi.com/?i=${id}&page=2&apikey=${API_KEY}`)\r\n        .then(res => {\r\n            // console.log('service:', res.data);\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction searchMovieById(id) {\r\n    console.log('id service:', id);\r\n    var movie = {};\r\n    MOVIES.some(currMovie => {\r\n        if (id === currMovie.imdbID) {\r\n            console.log('movie-service:', currMovie);\r\n            movie = currMovie;\r\n        }\r\n    })\r\n    return movie;\r\n}\r\n\r\nfunction _updateMovie(movie) {\r\n    // console.log('movie to update: ', movie.Title);    \r\n    // return new Promise((resolve, reject) => { \r\n        // console.log('_update ', MOVIES[0]);        \r\n        const idx = MOVIES.findIndex( m => movie.imdbID === m.imdbID)\r\n        if (idx !== -1) {\r\n            MOVIES[idx] = movie\r\n            // console.log('update', idx, movie.Title);\r\n        }\r\n        // MOVIES = Object.assign({}, MOVIES);\r\n        // resolve(movie)\r\n    // })\r\n  }\r\n  \r\n  function _addMovie(movie) {\r\n    return new Promise((resolve, reject) => { \r\n        movie.imdbID = uniqid();\r\n        movie.Poster = 'img/movie3.png';\r\n        MOVIES.push(movie);\r\n        resolve(movie);\r\n    })\r\n  }\r\n  \r\n  function checkDuplicate(newMovie) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        // console.log('name:', movie.Title);\r\n        if (newMovie.Title === movie.Title) {\r\n            if (newMovie.imdbID !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already Exist!\").then( () => {\r\n                    // console.log('duplicate1: ', duplicate);    \r\n                    return false;\r\n                })\r\n                // return false\r\n            }\r\n        }\r\n    });\r\n    return duplicate;\r\n  }\r\n\r\n  function saveMovie(newMovie) {\r\n    var duplicate = false;\r\n    MOVIES.some(movie => {\r\n        // console.log('name:', movie.Title);\r\n        if (newMovie.Title === movie.Title) {\r\n            if (newMovie.imdbID !== movie.imdbID) {         //not the same movie\r\n                duplicate = true;\r\n                swal(\"This movie already Exist!\").then( () => {\r\n                    // console.log('duplicate1: ', duplicate);    \r\n                    return false;\r\n                })\r\n                // return false\r\n            }\r\n        }\r\n    });\r\n    // console.log('duplicate2: ', duplicate);    \r\n    if (!duplicate) return newMovie.imdbID ? _updateMovie(newMovie) : _addMovie(newMovie)\r\n  }\r\n\r\n  function deleteMovie(id) {\r\n      console.log('id: ', id);      \r\n    return new Promise((resolve, reject) => { \r\n      const idx = MOVIES.findIndex( movie => movie.imdbID === id)\r\n      if (idx !== -1) {\r\n        MOVIES.splice(idx, 1)\r\n        console.log('deleted!');        \r\n      }\r\n      resolve()\r\n    })\r\n  }\r\nexport default {\r\n    getMovies,\r\n    getMovieById,\r\n    saveMovie,\r\n    loadMovies,\r\n    deleteMovie,\r\n    checkDuplicate,\r\n    searchMovieById\r\n}","import React , { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport './MoviePreview.css';\r\n\r\nclass MoviePreview extends Component {\r\n    state = {\r\n        movie: this.props.movie,\r\n        back: false,\r\n        edit: false\r\n    }\r\n    // componentDidMount() {\r\n    //     MovieService.getMovieById(this.props.movie.imdbID)\r\n    //     .then(data => {\r\n    //         // console.log('movie:', data);\r\n    //         this.setState({movie: data})\r\n    //     });\r\n    // }\r\n    editMovie= () => {\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    back = () => {\r\n        this.setState({back: !this.state.back})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    \r\n    render() {\r\n        const movie = this.state.movie;\r\n        if (this.state.back) {\r\n            return <Redirect to={`/movie`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            // return <Redirect to={`/movie/edit/${movie.imdbID}`}/>\r\n            return <Redirect to={{pathname: `/movie/edit/${movie.imdbID}`, movie: this.state.movie}} />\r\n        }\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png'\r\n        return (\r\n        <div className=\"movie-container flex column\">\r\n            <Link to={`/movie/${movie.imdbID}`} movie={movie} className=\"a-title\">\r\n               <h2 className=\"title\">{movie.Title.toLowerCase().substring(0,36)}</h2>\r\n            </Link>\r\n            {/* <div className=\"preview-body flex column\"> */}\r\n                <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                <p className=\"director\"><span>Directed by: </span>{movie.Director}</p>\r\n                <div className=\"year-container flex\">\r\n                    <p className=\"year\">{movie.Year},&nbsp;</p>\r\n                    <p className=\"runtime\"> {movie.Runtime}</p>\r\n                    {/* <p>{movie.imdbRating}</p> */}\r\n                </div>\r\n                <ul className=\"genre-list flex\">\r\n                    {movie.Genre.split(',').map(type => (\r\n                        <li className=\"genre\" key={type.id}>{type}</li>\r\n                        ))}\r\n                </ul>\r\n                {/* <p className=\"genre\">{movie.Genre.split(',')}</p> */}\r\n            {/* </div> */}\r\n            <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n            </button>\r\n       </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviePreview\r\n","import React , { Component } from 'react';\r\nimport MoviePreview from '../moviePreview/MoviePreview';\r\nimport MovieService from '../../services/MovieService';\r\nimport {Link} from 'react-router-dom';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            add: false,\r\n            movies: [],  //MovieService.getMovies(),\r\n            img: null\r\n        }\r\n    }\r\n    addMovie = () => {\r\n        this.setState({add: !this.state.add})\r\n    }\r\n    refreshMovies = () => {\r\n        // MovieService.getMovies()\r\n        // .then(res => {\r\n        //     console.log('dataaaa', res);\r\n        //     this.setState({movies: res});\r\n        // });\r\n    }\r\n    componentDidMount() {\r\n        MovieService.loadMovies()\r\n        .then(res => {\r\n            console.log('dataaaa', res);\r\n            this.setState({movies: res});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.add) {\r\n            return <Redirect to={{pathname: `/movie/edit/new`, updateMovie: this.updateMovie}} />\r\n        }\r\n        return (\r\n        <div className=\"movies flex column\">\r\n            <div className=\"sub-title flex\">\r\n                <p>Let's watch some movies!</p>\r\n                <button onClick={this.addMovie} className=\"btn add-btn\">Add Movie</button>\r\n            </div>\r\n            <div className=\"movie-preview\">\r\n                <ul className=\"movies-list flex\">\r\n                    {this.state.movies && this.state.movies.map(movie => (\r\n                        <li className=\"movie-list\" key={movie.imdbID}>\r\n                            {/* <Link to={`/movie/${movie.imdbID}`} movie={movie}> */}\r\n                                <MoviePreview movie={movie}/>\r\n                            {/* </Link> */}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './MovieEdit.css';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            cancel: false,\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            // wrongLine: false\r\n        };\r\n        this.saveMovie = this.saveMovie.bind(this);  \r\n    } \r\n    componentDidMount() {\r\n        // console.log('edit id', this.state.MovieId);\r\n        // MovieService.getMovieById(this.state.movieId)\r\n        // .then(data => {\r\n        //     // console.log('movie$$', data);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n        // .then(data => {\r\n            console.log('movie$$', currMovie);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        this.setState({movie: currMovie});\r\n    }\r\n    cancel = () => {\r\n        this.setState({cancel: !this.state.cancel})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    saveMovie(event) {\r\n        const movie = this.state.movie;\r\n        console.log('movie to be saved:', movie);\r\n        var keyCount = 0;           //avoid empty lines for edited and new movie\r\n        for (var key in movie) {\r\n            if (movie[key] === '') {\r\n                console.log('edit- fill them all!');\r\n                swal(\"Fill all fields!\").then( () => {\r\n                    return;\r\n                })\r\n                return\r\n            }    \r\n            keyCount++;   \r\n        }\r\n        if (keyCount < 5) {         //avoid empty lines for a new movie\r\n            console.log('new- fill them all!', keyCount);            \r\n            swal(\"Fill all fields!\").then( () => {\r\n                return;\r\n            })\r\n            return\r\n        }\r\n        var title = movie.Title\r\n        for (let i=0; i<title.length; i++) {\r\n            // var newTitle = title;\r\n            if (\r\n                (title.charCodeAt(i) !==32 && title.charCodeAt(i) < 65 ) ||\r\n                title.charCodeAt(i) > 122 ||\r\n                (title.charCodeAt(i) > 90 && title.charCodeAt(i) < 97)\r\n                ) {\r\n                    console.log('i: ', title[i]);                    \r\n                    swal(\"Only English caracters!\").then( () => {\r\n                        return;\r\n                    })\r\n                    return\r\n                    // newTitle = title.substring(0,i) + title.substring(i+1, title.length); \r\n                    // i--;\r\n                    // console.log('wrong!:', newTitle); \r\n                    // title = newTitle; \r\n                }\r\n        }\r\n        const duplicate = MovieService.checkDuplicate(movie);\r\n        if (duplicate) return;\r\n        movie.Title = title;\r\n        event.preventDefault();\r\n        MovieService.saveMovie(movie);\r\n        this.setState({cancel: !this.state.cancel});\r\n        // this.props.location.refreshMovies();\r\n    }\r\n    handleTitle = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Title = event.target.value;\r\n        this.setState({movie: newMovie});\r\n    }\r\n    handleDirector = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Director = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleYear = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Year = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleRuntime = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Runtime = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    handleGenre = (event) => {\r\n        const newMovie = JSON.parse(JSON.stringify(this.state.movie ))\r\n        newMovie.Genre = event.target.value;\r\n        this.setState({movie: newMovie});\r\n        // if (event.target.value === '')  {\r\n        //     this.setState({wrongLine: true});\r\n        // } else this.setState({wrongLine: false});\r\n    }\r\n    delete = () => {\r\n        swal({\r\n            title: \"Are you sure you want to delete this movie?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true,\r\n            className: \"swal-warning\"\r\n        }).then(willDelete => {\r\n            if (willDelete) {\r\n            MovieService.deleteMovie(this.state.movieId)\r\n                .then(() => {\r\n                    this.setState({cancel: !this.state.cancel})\r\n                    swal(\"Your movie has been deleted!\", {\r\n                    icon: \"success\",\r\n                    timer: 2000,\r\n                    className: \"swal-text\",\r\n                    button: false\r\n                    });\r\n                });\r\n            } else swal.close();\r\n        });\r\n    // MovieService.deleteMovie(this.state.movieId);\r\n    // this.setState({cancel: !this.state.cancel})\r\n    }\r\n    render() {\r\n        if (this.state.cancel) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        const movie = this.state.movie;\r\n        return (\r\n            <div className=\"edit flex column\">\r\n                <h1 className=\"edit-title\">{movie.imdbID? 'Edit' : 'Add Movie'}</h1>\r\n                <div className=\"form-edit flex column\">\r\n                    <div className=\"input-container flex\">\r\n                        <p>Title:</p>\r\n                        <input value={this.state.movie.Title} \r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleTitle}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                       <p>Director: </p> \r\n                        <input value={this.state.movie.Director}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleDirector}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>Year: </p>\r\n                        <input value={this.state.movie.Year}\r\n                            className = \"input-edit\" type=\"number\"\r\n                            onChange={this.handleYear}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>runtime: </p>\r\n                        <input value={this.state.movie.Runtime}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleRuntime}/>\r\n                    </div>\r\n                    <div className=\"input-container flex\">\r\n                        <p>genre: </p>\r\n                        <input value={this.state.movie.Genre}\r\n                            className = \"input-edit\" type=\"text\"\r\n                            onChange={this.handleGenre}/>\r\n                    </div>\r\n                    <div className=\"btns btns-edit flex\">\r\n                        <button className=\"btn\" onClick={this.saveMovie}>\r\n                            <FontAwesomeIcon icon=\"save\" title=\"save\"/>\r\n                        </button>\r\n                        <button className=\"btn\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn\" onClick={this.cancel}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './MovieDetails.css';\r\nimport MovieService from '../../services/MovieService';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MovieDetails extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            movieId: this.props.match.params.movieId,\r\n            movie: {},\r\n            // movie: this.props.location,\r\n            back: false,\r\n            edit: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // MovieService.getMovieById(this.state.movieId)\r\n        // .then(data => {\r\n        //     // console.log('movie$$', data);\r\n        //     this.setState({movie: data});\r\n        // });\r\n        console.log('id', this.state.MovieId);\r\n        var currMovie = MovieService.searchMovieById(this.state.movieId)\r\n            console.log('movie$$', currMovie);\r\n        this.setState({movie: currMovie});\r\n    }\r\n    editMovie = () => {\r\n        // console.log('movies: ', MovieService.getUpdatedMovies());\r\n        this.setState({edit: !this.state.edit})\r\n    }\r\n    back = () => {\r\n        this.setState({back: !this.state.back})\r\n        // console.log('back', this.state.back);\r\n    }\r\n    delete = () => {\r\n        swal({\r\n            title: \"Are you sure you want to delete this movie?\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true,\r\n            className: \"swal-warning\"\r\n        }).then(willDelete => {\r\n            if (willDelete) {\r\n            MovieService.deleteMovie(this.state.movieId)\r\n                .then(() => {\r\n                    this.setState({back: !this.state.back})\r\n                    swal(\"Your movie has been deleted!\", {\r\n                    icon: \"success\",\r\n                    timer: 2000,\r\n                    className: \"swal-text\",\r\n                    button: false\r\n                    });\r\n                });\r\n            } else swal.close();\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.back) {\r\n            return <Redirect to={`/`} />\r\n        }\r\n        else if (this.state.edit) {\r\n            return <Redirect to={{pathname: `/movie/edit/${this.props.match.params.movieId}`, refreshMovies: this.props.location.refreshMovies}} />\r\n        }\r\n        const movie = this.state.movie;\r\n        var imgSrc = movie.Poster;\r\n        if (imgSrc === null || imgSrc === 'N/A') imgSrc = 'img/movie3.png'\r\n        return (\r\n            <div className=\"movie-details-container flex column\">\r\n                <h2 className=\"title-details\">{movie.Title}</h2>\r\n                <div className=\"movie-details flex column\">\r\n                    <div className=\"details-container flex\">\r\n                        <img src={imgSrc || 'img/movie3.png'} alt=\"\"/>\r\n                        <div className=\"movie-text flex column\">\r\n                        {/* <div class=\"movie-info flex column\"> */}\r\n                            <p className=\"director\"><span>Directed by: </span>{movie.Director}</p>\r\n                            <p className=\"actors\"><span>Actors: </span>{movie.Actors? movie.Actors: 'Gal Gadot' }</p>\r\n                            <p className=\"rating\"><span>IMDb rating: </span>{movie.imdbRating? movie.imdbRating: '2.5'}/10</p>\r\n                        {/* </div> */}\r\n                            <div className=\"year-container flex\">\r\n                                <p className=\"year\">{movie.Year},&nbsp;</p>\r\n                                <p className=\"runtime\"> {movie.Runtime},&nbsp;</p>\r\n                                <p className=\"language\"> {movie.Language? movie.Language: 'Jibrish'}</p>\r\n                            </div>\r\n                            <p className=\"plot\">{movie.Plot? movie.Plot: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident.'}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btns flex\">\r\n                        <button className=\"btn btn-edit\" onClick={this.editMovie}>\r\n                            <FontAwesomeIcon icon=\"edit\" title=\"edit\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-delete\" onClick={this.delete}>\r\n                            <FontAwesomeIcon icon=\"trash-alt\" title=\"delete\"/>\r\n                        </button>\r\n                        <button className=\"btn btn-back\" onClick={this.back}>\r\n                            <FontAwesomeIcon icon=\"undo\" title=\"back\"/> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n","import React, { Component } from 'react';\nimport Header from './cmps/header/Header';\nimport Home from './cmps/home/Home';\nimport movie from './cmps/home/Home';\nimport MovieEdit from './cmps/movieEdit/MovieEdit';\nimport MovieDetails from './cmps/movieDetails/MovieDetails';\nimport MovieService from './services/MovieService';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrashAlt, faUndo, faSave } from '@fortawesome/free-solid-svg-icons'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nlibrary.add(faEdit)\nlibrary.add(faTrashAlt)\nlibrary.add(faUndo)\nlibrary.add(faSave)\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n      <div className=\"App\">\n        <Header className=\"App-header\"/>\n      </div>\n      <Switch className=\"body\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/movie\" component={movie}/>\n            <Route exact path=\"/movie/:movieId\" component={MovieDetails} /> \n            <Route exact path=\"/movie/edit/:movieId\" component={MovieEdit} />\n          </Switch>\n      </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App />\n</Router>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}